Terminals unused in grammar

   FUNC


Grammar

    0 $accept: statement $end

    1 expression: INTEGER_LITERAL
    2           | NAME
    3           | expression '+' expression
    4           | expression '-' expression
    5           | '-' expression
    6           | '(' expression ')'

    7 statement: expression ';'
    8          | NAME '=' expression ';'
    9          | PRINT expression ';'
   10          | END_OF_FILE


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6
')' (41) 6
'+' (43) 3
'-' (45) 4 5
';' (59) 7 8 9
'=' (61) 8
error (256)
END_OF_FILE (258) 10
PRINT (259) 9
FUNC (260)
NAME (261) 2 8
INTEGER_LITERAL (262) 1
UMINUS (263)


Nonterminals, with rules where they appear

$accept (15)
    on left: 0
expression (16)
    on left: 1 2 3 4 5 6, on right: 3 4 5 6 7 8 9
statement (17)
    on left: 7 8 9 10, on right: 0


State 0

    0 $accept: . statement $end

    END_OF_FILE      shift, and go to state 1
    PRINT            shift, and go to state 2
    NAME             shift, and go to state 3
    INTEGER_LITERAL  shift, and go to state 4
    '-'              shift, and go to state 5
    '('              shift, and go to state 6

    expression  go to state 7
    statement   go to state 8


State 1

   10 statement: END_OF_FILE .

    $default  reduce using rule 10 (statement)


State 2

    9 statement: PRINT . expression ';'

    NAME             shift, and go to state 9
    INTEGER_LITERAL  shift, and go to state 4
    '-'              shift, and go to state 5
    '('              shift, and go to state 6

    expression  go to state 10


State 3

    2 expression: NAME .
    8 statement: NAME . '=' expression ';'

    '='  shift, and go to state 11

    $default  reduce using rule 2 (expression)


State 4

    1 expression: INTEGER_LITERAL .

    $default  reduce using rule 1 (expression)


State 5

    5 expression: '-' . expression

    NAME             shift, and go to state 9
    INTEGER_LITERAL  shift, and go to state 4
    '-'              shift, and go to state 5
    '('              shift, and go to state 6

    expression  go to state 12


State 6

    6 expression: '(' . expression ')'

    NAME             shift, and go to state 9
    INTEGER_LITERAL  shift, and go to state 4
    '-'              shift, and go to state 5
    '('              shift, and go to state 6

    expression  go to state 13


State 7

    3 expression: expression . '+' expression
    4           | expression . '-' expression
    7 statement: expression . ';'

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    ';'  shift, and go to state 16


State 8

    0 $accept: statement . $end

    $end  shift, and go to state 17


State 9

    2 expression: NAME .

    $default  reduce using rule 2 (expression)


State 10

    3 expression: expression . '+' expression
    4           | expression . '-' expression
    9 statement: PRINT expression . ';'

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    ';'  shift, and go to state 18


State 11

    8 statement: NAME '=' . expression ';'

    NAME             shift, and go to state 9
    INTEGER_LITERAL  shift, and go to state 4
    '-'              shift, and go to state 5
    '('              shift, and go to state 6

    expression  go to state 19


State 12

    3 expression: expression . '+' expression
    4           | expression . '-' expression
    5           | '-' expression .

    $default  reduce using rule 5 (expression)


State 13

    3 expression: expression . '+' expression
    4           | expression . '-' expression
    6           | '(' expression . ')'

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    ')'  shift, and go to state 20


State 14

    3 expression: expression '+' . expression

    NAME             shift, and go to state 9
    INTEGER_LITERAL  shift, and go to state 4
    '-'              shift, and go to state 5
    '('              shift, and go to state 6

    expression  go to state 21


State 15

    4 expression: expression '-' . expression

    NAME             shift, and go to state 9
    INTEGER_LITERAL  shift, and go to state 4
    '-'              shift, and go to state 5
    '('              shift, and go to state 6

    expression  go to state 22


State 16

    7 statement: expression ';' .

    $default  reduce using rule 7 (statement)


State 17

    0 $accept: statement $end .

    $default  accept


State 18

    9 statement: PRINT expression ';' .

    $default  reduce using rule 9 (statement)


State 19

    3 expression: expression . '+' expression
    4           | expression . '-' expression
    8 statement: NAME '=' expression . ';'

    '+'  shift, and go to state 14
    '-'  shift, and go to state 15
    ';'  shift, and go to state 23


State 20

    6 expression: '(' expression ')' .

    $default  reduce using rule 6 (expression)


State 21

    3 expression: expression . '+' expression
    3           | expression '+' expression .
    4           | expression . '-' expression

    $default  reduce using rule 3 (expression)


State 22

    3 expression: expression . '+' expression
    4           | expression . '-' expression
    4           | expression '-' expression .

    $default  reduce using rule 4 (expression)


State 23

    8 statement: NAME '=' expression ';' .

    $default  reduce using rule 8 (statement)
