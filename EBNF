Winter EBNF Grammar Specification

atom = NONE
	 | INTEGER_LITERAL
	 | FLOAT_LITERAL
	 | TRUE
	 | FALSE
	 | NAME
	 | '(' expression ')'

function_call = atom
			  | NAME '(' [comma_expression] ')'

prefix = function_call
	   | '-' prefix

add_ops = prefix ('+' | '-') add_ops

expression = add_ops

comma_expression = expression {',' expression}

scope = '{' {statement} '}'

arg_list = NAME {',' NAME}

lone_expression = expression ';'

assignment = NAME '=' expression ';'

print_stmt = PRINT expression ';'

return_stmt = RETURN expression ';'

if_stmt = IF expression scope {ELSE IF expression scope} [ELSE scope]

func_declaration = FUNC NAME '(' [arg_list] ') scope

statement = lone_expression
		  | assignment
		  | print_stmt
		  | return_stmt
		  | if_stmt
		  | func_declaration
